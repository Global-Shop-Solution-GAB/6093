Program.Sub.ScreenSU.Start
Gui.f_Main..Create(BaseForm)
Gui.f_Main..Caption("Sales Order Approvals/Non-Approvals")
Gui.f_Main..Size(467,712)
Gui.f_Main..MinX(0)
Gui.f_Main..MinY(0)
Gui.f_Main..Position(0,0)
Gui.f_Main..AlwaysOnTop(False)
Gui.f_Main..FontName("Tahoma")
Gui.f_Main..FontSize(8.25)
Gui.f_Main..ControlBox(True)
Gui.f_Main..MaxButton(False)
Gui.f_Main..MinButton(True)
Gui.f_Main..MousePointer(0)
Gui.f_Main..Moveable(True)
Gui.f_Main..Sizeable(False)
Gui.f_Main..ShowInTaskBar(True)
Gui.f_Main..TitleBar(True)
Gui.f_Main..ShowCompanyCode(False)
Gui.f_Main..Event(UnLoad,f_Main_Unload)
Gui.f_Main.frameApproved.Create(Frame)
Gui.f_Main.frameApproved.Enabled(True)
Gui.f_Main.frameApproved.Visible(True)
Gui.f_Main.frameApproved.Zorder(0)
Gui.f_Main.frameApproved.Size(455,333)
Gui.f_Main.frameApproved.Position(5,10)
Gui.f_Main.frameApproved.Caption("Approved Parts:")
Gui.f_Main.frameApproved.FontName("Tahoma")
Gui.f_Main.frameApproved.FontSize(8.25)
Gui.f_Main.frameApproved.BorderStyle(2)
Gui.f_Main.frameApproved.Anchor(13)
Gui.f_Main.GsGcApproved.Create(GsGridControl)
Gui.f_Main.GsGcApproved.Enabled(True)
Gui.f_Main.GsGcApproved.Visible(True)
Gui.f_Main.GsGcApproved.Zorder(0)
Gui.f_Main.GsGcApproved.Size(455,307)
Gui.f_Main.GsGcApproved.Position(0,26)
Gui.f_Main.GsGcApproved.Parent("frameApproved")
Gui.f_Main.GsGcApproved.Dock(5)
Gui.f_Main.frameUnapproved.Create(Frame)
Gui.f_Main.frameUnapproved.Enabled(True)
Gui.f_Main.frameUnapproved.Visible(True)
Gui.f_Main.frameUnapproved.Zorder(0)
Gui.f_Main.frameUnapproved.Size(455,333)
Gui.f_Main.frameUnapproved.Position(5,365)
Gui.f_Main.frameUnapproved.Caption("Unapproved Parts:")
Gui.f_Main.frameUnapproved.FontName("Tahoma")
Gui.f_Main.frameUnapproved.FontSize(8.25)
Gui.f_Main.frameUnapproved.BorderStyle(2)
Gui.f_Main.frameUnapproved.Anchor(15)
Gui.f_Main.GsGcUnapproved.Create(GsGridControl)
Gui.f_Main.GsGcUnapproved.Enabled(True)
Gui.f_Main.GsGcUnapproved.Visible(True)
Gui.f_Main.GsGcUnapproved.Zorder(0)
Gui.f_Main.GsGcUnapproved.Size(455,307)
Gui.f_Main.GsGcUnapproved.Position(0,26)
Gui.f_Main.GsGcUnapproved.Parent("frameUnapproved")
Gui.f_Main.GsGcUnapproved.Dock(5)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
'SO Line Approval Modification/Addition for TE Connectivity Inc
'Written By Ashley Collins
'September 14, 2020

Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass)

F.Intrinsic.Control.If(V.Caller.Hook,=,34410)
'check to see if the script is firing from automated purchasing
	F.Intrinsic.Control.CallSub(LoadApprovedGrid)
	F.Intrinsic.Control.CallSub(FormatApprovedGrid)
	F.Intrinsic.Control.CallSub(LoadUnapprovedGrid)
	F.Intrinsic.Control.CallSub(FormatUnapprovedGrid)
	F.Intrinsic.Control.CallSub(LoadAutoPurch)
	F.Intrinsic.Control.If(V.DataTable.dtApproved.RowCount--,>,-1, "OR", V.DataTable.dtUnapproved.RowCount--,>,-1)
		Gui.f_Main..Show
	F.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.CallSub(f_Main_Unload)
F.Intrinsic.Control.ElseIf(v.Caller.Hook,=,28600)
'check to see if the script is firing from Automated WO Generation
	'load temp grid info
'	F.Intrinsic.Control.CallSub(LoadApprovedGrid)
'	F.Intrinsic.Control.CallSub(FormatApprovedGrid)
'	F.Intrinsic.Control.CallSub(LoadUnapprovedGrid)
'	F.Intrinsic.Control.CallSub(FormatUnapprovedGrid)
	F.Intrinsic.Control.CallSub(LoadWOGen)
	'show grid
'	Gui.f_Main..Show
	'F.Intrinsic.Control.CallSub(f_Main_Unload)
F.Intrinsic.Control.EndIf
'call the sub to close the connection and end the program


F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6093", "ProjectTitle", "SO Line Approval", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.LoadAutoPurch.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.iColumns.Declare(Long)
V.Local.iRows.Declare(Long)
V.Local.sBDF.Declare(String)
V.Local.sBDFClone.Declare(String)
V.Local.sDataTypes.Declare(String)
V.Local.sFlag.Declare(String)
V.Local.sJob.Declare(String)
V.Local.sLoc.Declare(String)
V.Local.sOrderNo.Declare(String)
V.Local.sOrderLine.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSuffix.Declare(String)
V.Local.sTemp.Declare(String)
V.Local.sTitles.Declare(String)
V.Local.sPartRev.Declare(String)
V.Local.sApprovedMsg.Declare(String)
V.Local.sUnapprovedMsg.Declare(String)
V.Local.sMessage.Declare(String)
V.Local.sMessage2.Declare(String)
V.Local.sMsgBox.Declare(String)

'Load the BDF that is loaded when the hook fires
F.Intrinsic.BDF.Load("AUX001", "AUX001")
'clone the BDF to remove the sales orders that haven't been approved
'F.Intrinsic.BDF.Clone("AUX001", "Clone")
'Pull in the titles for the BDF
F.Intrinsic.BDF.ReadColumnTitle("AUX001",V.Local.sTitles)

'Build variables for datatypes
F.Intrinsic.BDF.ReadColumnCount("AUX001",V.Local.iColumns)
F.Intrinsic.Math.Sub(V.Local.iColumns,1,V.Local.iColumns)
F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iColumns,1)
	F.Intrinsic.Control.If(V.Local.iCnt,=,0)
		V.Local.sDataTypes.Set("String")
	F.Intrinsic.Control.Else		
		F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sDataTypes,"String",V.Local.sDataTypes)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

V.Local.sPart.Set(V.Passed.000001)
F.Intrinsic.String.RPad(V.Local.sPart, " ", 17, V.Local.sPart)
V.Local.sRev.Set(V.Passed.000206)
F.Intrinsic.String.RPad(V.Local.sRev, " ", 3, V.Local.sRev)
F.Intrinsic.String.Build("{0}{1}", V.Local.sPart, V.Local.sRev, V.Local.sPartRev)
'build string data and load to datatable
F.Intrinsic.BDF.ReadRowCount("AUX001", V.Local.iRows)
F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
	F.Intrinsic.BDF.ReadRow("AUX001",V.Local.iCnt,V.Local.sTemp)

	F.Intrinsic.String.Split(v.Local.sTemp, "|~|", V.Local.sRet)
	V.Local.sLoc.Set(V.Local.sRet(0).Trim)
	V.Local.sOrderNo.Set(V.Local.sRet(7).Trim)
	V.Local.sOrderLine.Set(V.Local.sRet(8).Trim)
	f.Intrinsic.String.RPad(v.Local.sOrderLine, "0", 4, v.Local.sOrderLine)
	
	F.Intrinsic.Control.If(v.Local.sOrderNo,<>,"")
		F.Intrinsic.String.Build("SELECT APPROVAL_FLAG FROM SO_LINE_APPROVAL WHERE ORDER_NO = '{0}' AND LINE = '{1}' ", V.Local.sOrderNo.Trim, V.Local.sOrderLine.Trim, V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sFlag)
		F.Intrinsic.Control.If(V.Local.sFlag,=,"True")
'			F.Intrinsic.BDF.WriteRow("Clone", V.Local.sTemp)
			F.Data.DataTable.AddRow("dtApproved", "PART",V.Local.sPartRev.Trim, "LOC", V.Local.sLoc.Trim,"SALES_ORDER", V.Local.sOrderNo.Trim,"ORDER_LINE", V.Local.sOrderLine.Trim)
		F.Intrinsic.Control.ElseIf(V.Local.sFlag,=,"False")
			F.Data.DataTable.AddRow("dtUnapproved", "PART",V.Local.sPartRev, "LOC", V.Local.sLoc.Trim,"SALES_ORDER", V.Local.sOrderNo.Trim,"ORDER_LINE", V.Local.sOrderLine.Trim)
		F.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.ElseIf(V.Local.sOrderNo,=,"")
'		F.Intrinsic.BDF.WriteRow("Clone", V.Local.sTemp)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)
'F.Intrinsic.BDF.Save("Clone", "AUX001")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6093", "ProjectTitle", "SO Line Approval", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadAutoPurch.End

Program.Sub.LoadApprovedGrid.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtApproved.Exists)
	F.Data.DataTable.Close("dtApproved")
F.Intrinsic.Control.EndIf

F.Data.DataTable.Create("dtApproved", True)
F.Data.DataTable.AddColumn("dtApproved", "PART", "STRING")
F.Data.DataTable.AddColumn("dtApproved", "LOC", "STRING")
F.Data.DataTable.AddColumn("dtApproved", "SALES_ORDER", "STRING")
F.Data.DataTable.AddColumn("dtApproved", "ORDER_LINE", "STRING")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6093", "ProjectTitle", "SO Line Approval", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadApprovedGrid.End

Program.Sub.FormatApprovedGrid.Start
F.Intrinsic.Control.Try
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)

Gui.f_Main.GsGcApproved.AddGridviewFromDatatable("gvApproved", "dtApproved")
V.Local.sGV.Set("gvApproved")

Gui.f_Main.GsGcApproved.SetGridviewProperty(V.Local.sGV, "OptionsViewShowGroupPanel", False)
Gui.f_Main.GsGcApproved.SetGridviewProperty(V.Local.sGV, "OptionsViewColumnAutoWidth", True)
Gui.f_Main.GsGcApproved.SetGridviewProperty(V.Local.sGV, "AllowSort", True)
Gui.f_Main.GsGcApproved.SetGridviewProperty(V.Local.sGV, "AllowFilter", False)

V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "PART",V.Local.sProperty, "Part")
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "LOC", V.Local.sProperty, "Loc")
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "SALES_ORDER", V.Local.sProperty, "Sales Order")
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, "Order Line")

V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "PART",V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "LOC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "SALES_ORDER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "PART",V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "LOC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "SALES_ORDER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "PART",V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "LOC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "SALES_ORDER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderHAlignment")
V.Local.sDefault.Set("Center")
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "PART",V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "LOC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "SALES_ORDER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcApproved.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)

Gui.f_Main.GsGcApproved.MainView(V.Local.sGV)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6093", "ProjectTitle", "SO Line Approval", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.FormatApprovedGrid.End

Program.Sub.LoadUnapprovedGrid.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtUnapproved.Exists)
	F.Data.DataTable.Close("dtUnapproved")
F.Intrinsic.Control.EndIf

F.Data.DataTable.Create("dtUnapproved",True)
F.Data.DataTable.AddColumn("dtUnapproved", "PART", "STRING")
F.Data.DataTable.AddColumn("dtUnapproved", "LOC", "STRING")
F.Data.DataTable.AddColumn("dtUnapproved", "SALES_ORDER", "STRING")
F.Data.DataTable.AddColumn("dtUnapproved", "ORDER_LINE", "STRING")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6093", "ProjectTitle", "SO Line Approval", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadUnapprovedGrid.End

Program.Sub.FormatUnapprovedGrid.Start
F.Intrinsic.Control.Try
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)

Gui.f_Main.GsGcUnapproved.AddGridviewFromDatatable("gvUnapproved", "dtUnapproved")
V.Local.sGV.Set("gvUnapproved")

Gui.f_Main.GsGcUnapproved.SetGridviewProperty(V.Local.sGV, "OptionsViewShowGroupPanel", False)
Gui.f_Main.GsGcUnapproved.SetGridviewProperty(V.Local.sGV, "OptionsViewColumnAutoWidth", True)
Gui.f_Main.GsGcUnapproved.SetGridviewProperty(V.Local.sGV, "AllowSort", True)
Gui.f_Main.GsGcUnapproved.SetGridviewProperty(V.Local.sGV, "AllowFilter", False)

V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "PART",V.Local.sProperty, "Part")
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "LOC", V.Local.sProperty, "Loc")
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "SALES_ORDER", V.Local.sProperty, "Sales Order")
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, "Order Line")

V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "PART",V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "LOC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "SALES_ORDER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("AllowEdit")
V.Local.sDefault.Set("False")
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "PART",V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "LOC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "SALES_ORDER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("ReadOnly")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "PART",V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "LOC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "SALES_ORDER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("HeaderHAlignment")
V.Local.sDefault.Set("Center")
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "PART",V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "LOC", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "SALES_ORDER", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcUnapproved.SetColumnProperty(V.Local.sGV, "ORDER_LINE", V.Local.sProperty, V.Local.sDefault)

Gui.f_Main.GsGcUnapproved.MainView(V.Local.sGV)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6093", "ProjectTitle", "SO Line Approval", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.FormatUnapprovedGrid.End

Program.Sub.LoadWOGen.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.iColumns.Declare(Long)
V.Local.iRows.Declare(Long)
V.Local.sBDF.Declare(String)
V.Local.sBDFClone.Declare(String)
V.Local.sDataTypes.Declare(String)
V.Local.sFlag.Declare(String)
V.Local.sJob.Declare(String)
V.Local.sLoc.Declare(String)
V.Local.sOrderNo.Declare(String)
V.Local.sOrderLine.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sPartRev.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sSuffix.Declare(String)
V.Local.sTemp.Declare(String)
V.Local.sTitles.Declare(String)
V.Local.sReadRow.Declare(String)
V.Local.sRev.Declare(String)

'Load the BDF that is loaded when the hook fires
F.Intrinsic.BDF.Load("AUX001", "AUX001")
'clone the BDF to remove the sales orders that haven't been approved
F.Intrinsic.BDF.Clone("AUX001", "Clone")
'Pull in the titles for the BDF
F.Intrinsic.BDF.ReadColumnTitle("AUX001",V.Local.sTitles)

'Build variables for datatypes
F.Intrinsic.BDF.ReadColumnCount("AUX001",V.Local.iColumns)
F.Intrinsic.Math.Sub(V.Local.iColumns,1,V.Local.iColumns)
F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iColumns,1)
	F.Intrinsic.Control.If(V.Local.iCnt,=,0)
		V.Local.sDataTypes.Set("String")
	F.Intrinsic.Control.Else		
		F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sDataTypes,"String",V.Local.sDataTypes)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

'build string data and load to datatable
F.Intrinsic.BDF.ReadRowCount("AUX001", V.Local.iRows)
F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)

F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
	F.Intrinsic.BDF.ReadRow("AUX001",V.Local.iCnt,V.Local.sTemp)
	V.Local.sTemp(0).Set(V.Local.sTemp(0).Trim)

	F.Intrinsic.String.Split(v.Local.sTemp, "|~|", V.Local.sRet)

	V.Local.sOrderNo.Set(V.Local.sRet(8).Trim)
	V.Local.sOrderLine.Set(V.Local.sRet(9).Trim)
	f.Intrinsic.String.RPad(v.Local.sOrderLine, "0", 4, v.Local.sOrderLine)
	V.Local.sPart.Set(V.Local.sRet(1).Trim)
	V.Local.sRev.Set(V.Local.sRet(2).Trim)
	F.Intrinsic.String.RPad(V.Local.sPart, " ",17, V.Local.sPart)
	F.Intrinsic.String.RPad(V.Local.sRev, " ",3, V.Local.sRev)
	V.Local.sLoc.Set(V.Local.sRet(3).Trim)
	F.Intrinsic.String.Build("{0}{1}", V.Local.sPart, V.Local.sRev, V.Local.sPartRev)
	F.Intrinsic.Control.If(V.Local.sOrderNo,<>,"")

		F.Intrinsic.String.Build("SELECT APPROVAL_FLAG FROM SO_LINE_APPROVAL WHERE ORDER_NO = '{0}' AND LINE = '{1}' ", V.Local.sOrderNo.Trim, V.Local.sOrderLine.Trim, V.Local.sSQL)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Local.sFlag)
		F.Intrinsic.Control.If(V.Local.sFlag,=,"False")

'			F.Data.DataTable.AddRow("dtUnapproved", "PART",V.Local.sPartRev, "LOC", V.Local.sLoc.Trim,"SALES_ORDER", V.Local.sOrderNo.Trim,"ORDER_LINE", V.Local.sOrderLine.Trim)
			F.Intrinsic.String.Split(V.Local.sTemp,"|~|",V.Local.sReadRow)
			F.Intrinsic.String.Concat(V.Local.sReadRow(0),"|~|",V.Local.sReadRow(1),"|~|",V.Local.sReadRow(2),"|~|",V.Local.sReadRow(3),"|~|",V.Local.sReadRow(4),"|~|",V.Local.sReadRow(5),"|~|",V.Local.sReadRow(6),"|~|",V.Local.sReadRow(7),"|~|",V.Local.sReadRow(8),"|~|",V.Local.sReadRow(9),"|~|",V.Local.sReadRow(10),"|~|",V.Local.sReadRow(11),"|~|",V.Local.sReadRow(12),"|~|",V.Local.sReadRow(13),"|~|",-1,"|~|",V.Local.sReadRow(15),"|~|",V.Local.sReadRow(16),"|~|",V.Local.sReadRow(17),V.Local.sReadRow)
			F.Intrinsic.BDF.WriteRow("Clone", V.Local.sReadRow)
'			F.Intrinsic.BDF.WriteRow("Clone", V.Local.sTemp)
		F.Intrinsic.Control.ElseIf(V.Local.sFlag,=,"True")
'			F.Data.DataTable.AddRow("dtApproved", "PART",V.Local.sPartRev.Trim, "LOC", V.Local.sLoc.Trim,"SALES_ORDER", V.Local.sOrderNo.Trim,"ORDER_LINE", V.Local.sOrderLine.Trim)
			F.Intrinsic.BDF.WriteRow("Clone", V.Local.sTemp)
		F.Intrinsic.Control.ElseIf(V.Local.sFlag,=,"")
			F.Intrinsic.BDF.WriteRow("Clone", V.Local.sTemp)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.ElseIf(V.Local.sOrderNo,=,"")
		F.Intrinsic.BDF.WriteRow("Clone", V.Local.sTemp)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.BDF.Save("Clone", "AUX001")


F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6093", "ProjectTitle", "SO Line Approval", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadWOGen.End

Program.Sub.f_Main_Unload.Start
F.Intrinsic.Control.Try

F.ODBC.Connection!con.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6093", "ProjectTitle", "SO Line Approval", "Callback", "f_Main_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.f_Main_Unload.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$acollins$}$20201014121533540$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVkg+e2yth67TbIRSY0UlLUiZSHcVLD2Cht+TQxiKH6BOX5yS+5hbOp9Q==
Program.Sub.Comments.End